name: Release

on:
  workflow_dispatch:

jobs:
  push-github-packages:
    name: 'Push GitHub Packages'
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    runs-on: windows-latest
    steps:
      - name: 'Download Artefact'
        uses: actions/download-artifact@v1
        with:
          name: 'windows-latest'
      - name: 'Dotnet NuGet Add Source'
        run: dotnet nuget add source https://nuget.pkg.github.com/geewee/index.json --name GitHub --username geewee --password ${{secrets.GITHUB_TOKEN}}
        shell: pwsh
      - name: 'Dotnet NuGet Push'
        # Workaround bug when pushing to GitHub Packages. See https://github.com/NuGet/Home/issues/9775
        env:
          DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER: 0
        run: |
          $count = 0;
          do {
              ++$count;
              dotnet nuget push .\windows-latest\*.nupkg --source GitHub --skip-duplicate;
          }
          while ($count -lt 1000 -and $LastExitCode -ne 0)
        shell: pwsh

  push-nuget:
    name: 'Push NuGet Packages'
    needs: build
    if: github.event_name == 'release'
    runs-on: windows-latest
    steps:
      - name: 'Download Artefact'
        uses: actions/download-artifact@v1
        with:
          name: 'windows-latest'
      - name: 'Dotnet NuGet Push'
        run: |
          Get-ChildItem .\windows-latest -Filter *.nupkg |
          Where-Object { !$_.Name.Contains('preview') } |
          ForEach-Object { dotnet nuget push $_ --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}} }
        shell: pwsh

  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
